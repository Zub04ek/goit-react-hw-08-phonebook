{"version":3,"file":"static/js/728.aa4fc404.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/icons/dist/chunk-JIJ6CQ2I.mjs","../node_modules/@chakra-ui/icons/dist/chunk-KD763W2L.mjs"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form as FormikForm } from 'formik';\nimport { Button } from '@chakra-ui/react';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 40px;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const FormField = styled.label`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-weight: 500;\n`;\n\nexport const SubmitButton = styled(Button)`\n  width: 200px;\n  &:hover,\n  :focus {\n    background-color: #7fadf7;\n    color: #f4f6f9;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Container,\n  Form,\n  FormField,\n  SubmitButton,\n} from './RegisterForm.styled';\nimport {\n  FormControl,\n  FormErrorMessage,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Heading,\n} from '@chakra-ui/react';\nimport { UnlockIcon, EmailIcon, Icon } from '@chakra-ui/icons';\nimport { TiUserOutline } from 'react-icons/ti';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Username is required!'),\n  email: yup.string().email().required('Email is required!'),\n  password: yup.string().min(10).required('Password is required!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <Heading color=\"#7fadf7\">Register Form</Heading>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <FormField>\n            <Field type=\"text\" name=\"name\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={\n                        <Icon as={TiUserOutline} boxSize={6} color=\"gray.300\" />\n                      }\n                    />\n                    <Input\n                      {...field}\n                      placeholder=\"Username\"\n                      border=\"1px solid #7fadf7\"\n                    />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n          </FormField>\n          <FormField>\n            <Field type=\"email\" name=\"email\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={<EmailIcon color=\"gray.300\" />}\n                    />\n                    <Input\n                      {...field}\n                      placeholder=\"Email\"\n                      border=\"1px solid #7fadf7\"\n                    />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n          </FormField>\n          <FormField>\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl\n                  isInvalid={form.errors.password && form.touched.password}\n                >\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={<UnlockIcon color=\"gray.300\" />}\n                    />\n                    <Input\n                      {...field}\n                      type=\"password\"\n                      placeholder=\"Enter password\"\n                      border=\"1px solid #7fadf7\"\n                      autoComplete=\"off\"\n                    />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n          </FormField>\n          <SubmitButton type=\"submit\">Register</SubmitButton>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <main>\n        <RegisterForm />\n    </main>\n  );\n};\n\nexport default Register;\n","// src/Email.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar EmailIcon = createIcon({\n  displayName: \"EmailIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M11.114,14.556a1.252,1.252,0,0,0,1.768,0L22.568,4.87a.5.5,0,0,0-.281-.849A1.966,1.966,0,0,0,22,4H2a1.966,1.966,0,0,0-.289.021.5.5,0,0,0-.281.849Z\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.888,5.832a.182.182,0,0,0-.2.039l-6.2,6.2a.251.251,0,0,0,0,.354l5.043,5.043a.75.75,0,1,1-1.06,1.061l-5.043-5.043a.25.25,0,0,0-.354,0l-2.129,2.129a2.75,2.75,0,0,1-3.888,0L7.926,13.488a.251.251,0,0,0-.354,0L2.529,18.531a.75.75,0,0,1-1.06-1.061l5.043-5.043a.251.251,0,0,0,0-.354l-6.2-6.2a.18.18,0,0,0-.2-.039A.182.182,0,0,0,0,6V18a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A.181.181,0,0,0,23.888,5.832Z\" })\n  ] })\n});\n\nexport {\n  EmailIcon\n};\n","// src/Unlock.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar UnlockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75A6.751,6.751,0,0,0,5.533,4.811a1.25,1.25,0,1,0,2.395.717A4.251,4.251,0,0,1,16.25,6.75V9a.5.5,0,0,1-.5.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5Z\",\n  displayName: \"UnlockIcon\"\n});\n\nexport {\n  UnlockIcon\n};\n"],"names":["Container","styled","Form","FormikForm","FormField","SubmitButton","Button","initialValues","name","email","password","schema","yup","shape","required","min","RegisterForm","dispatch","useDispatch","color","validationSchema","onSubmit","values","resetForm","register","type","field","form","isInvalid","errors","touched","pointerEvents","children","as","TiUserOutline","boxSize","I","placeholder","border","autoComplete","EmailIcon","createIcon","displayName","path","jsxs","fill","jsx","d","UnlockIcon"],"sourceRoot":""}